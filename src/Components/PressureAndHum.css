.pressureHumidity{
    /* border: 1px solid red; */
    display: flex;
    height: 40px;
  }
  .pressureHumidity div{
    background-color: #f3fbff;
  }
  .pressureHumidity div:nth-child(1) {
    width: 39%;
    margin-left: 15px;
    padding-left: 13px;
  }
  .pressureHumidity div:nth-child(2) {
    width: 39%;
    margin-left: 15px;
    padding-left: 13px;
  }
  .pressureHumidity div:nth-child(1) p:nth-child(1) {
    margin-top: 0px;
    font-family: sans-serif;
    font-weight: 700;
    font-size: 13.8px;
  }
  .pressureHumidity div:nth-child(2) p:nth-child(1) {
    margin-top: 0px;
    font-family: sans-serif;
    font-weight: 700;
    font-size: 13.8px;
  }
  .pressureHumidity div:nth-child(1) p:nth-child(2) {
    margin-top: -10px;
    font-family: sans-serif;
    font-size: 12.4px;
  }
  .pressureHumidity div:nth-child(2) p:nth-child(2) {
    margin-top: -10px;
    font-family: sans-serif;
    font-size: 12.4px;
  }
  








/* 

  import React, {Component} from "react";
import { useEffect } from "react";
import Chart from 'react-apexcharts'
import { useSelector } from "react-redux";


const ApexChartTemp = () => {

  const temp12Hour = useSelector((state) => state.Temp12Hour.TwelveHour);
 
 console.log( "ApexChartTemp", temp12Hour);


    let  state = {
        options: {
          chart: {
              type: 'area',
              zoom: {
                enabled: false
              }
            },
          xaxis: {
            categories: [1,2,3,4,5,6,7,8,9,10,11,12]
          },
          yaxis: {
            show: false,
          },
          stroke: {
            curve: 'smooth'
          },
          dataLabels: {
              enabled: false
          },
          subtitle: {
            text: 'Hourly Temperature Movements',
            align: 'left',
          }
        },
      }
    
 const tempData = () =>  {
  if(temp12Hour === undefined) {
    return ("...Loading"); 
  }  else {
  return (
    [{
      name: 'Temperature',
      data: [Math.floor(temp12Hour[0].temp), Math.floor(temp12Hour[1].temp),
            Math.floor(temp12Hour[2].temp), Math.floor(temp12Hour[3].temp), 
            Math.floor(temp12Hour[4].temp), Math.floor(temp12Hour[5].temp), 
            Math.floor(temp12Hour[6].temp), Math.floor(temp12Hour[7].temp),
             Math.floor(temp12Hour[10].temp),Math.floor(temp12Hour[11].temp),
            ]
    }]
  )
  }
}

 
    
      return (
          <div className="chart">
               <Chart options={state.options} series={tempData()} type="area" width={300} height={150} />
          </div>
      )
  
}

export default ApexChartTemp; */