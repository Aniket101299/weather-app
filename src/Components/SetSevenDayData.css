.sevenDay{
    display: grid;
    grid-template-columns: repeat(8,60px);
    grid-gap: 5px;
    margin-left: 15px;
    overflow: scroll;
  }
  /* .sevenDay div{
    border: 1px solid green;
  } */
  .sevenDay div p:nth-child(1){
    font-size: 13.5px;
    font-weight: 700;
    text-align: center;
    margin-top: 20px;
    margin-bottom: 0px;
  }
  .sevenDay div span:nth-child(2){
    font-size: 14.5px;
    font-weight: 700;
    margin-left: 10px;
  }
  .sevenDay div span:nth-child(3){
    font-size: 14.5px;
    text-align: center;
  }
  .sevenDay div img{
    width: 25px;
    margin-left: 16px;
    margin-top: 7px;
  }
  .sevenDay div p:nth-child(5){
    font-size: 12.3px;
    text-align: center;
    margin-top: 2px;
  }






  .true0{
    background-color: gray;
  }
  .true1{
    background-color: gray;
  }
  .true2{
    background-color: gray;
  }
  .true3{
    background-color: gray;
  }
  .true4{
    background-color: gray;
  }
  .true5{
    background-color: gray;
  }
  .true6{
    background-color: gray;
  }
  .true7{
    background-color: gray;
  }







/* 
  import { useEffect, useState } from "react";
import { useSelector, useDispatch } from "react-redux"; 
import { setOnclick } from "../redux/actions/actions";
import "./SetSevenDayData.css";

import rain from "../images/rain.png";
import mist from "../images/mist.png";
import cloud from "../images/clouds.png";
import clear from "../images/clear.png";
import haze from "../images/haze.png";


export default function SetSevenDayData() {

  const dispatch = useDispatch();

  const [colour, setColour] = useState("white");
  const [state, setState] = useState(false);

  const sevenData = useSelector((state) => state.sevenDayData.sevenDayData);
  const clickRise = useSelector((state) => state.sunriseData.sunriseData);
  const clickSet = useSelector((state) => state.sunsetData.sunsetData);
  const allSeven = useSelector((state) => state.allSevenData.allSevenData);

  // const click = useSelector((state) => state.onclickData.onclickData.clicked);

  console.log("reduxData", sevenData);

  const renderSeven = sevenData.map((day,i) => {

  const { name, minTemp, maxTemp, weather, currentDayTemp } = day;

  const setData = (index, currentDayTemp, weather) => {
    let rise = clickRise[index];
    let set = clickSet[index];
    let pressure = allSeven[index].pressure;
    let humidity = allSeven[index].humidity;
    console.log("index", index);
    dispatch(setOnclick({
      "rise":rise, "set":set, "pressure":pressure, 
      "humidity":humidity, "currentDayTemp":currentDayTemp,
      "weather":weather, clicked: true
    }));
    setState(!state);
    // state == true ? setColour("gray") : setColour("white");
  }
  // (clicked && clicked == true) ? {backgroundColor:"blue"} : 
  // style={{backgroundColor: "gray"}}

  return (
  <div className={`${state}${i}`} key={i} onClick={() => setData(i, currentDayTemp, weather)} >
    <p>{name}</p>
    <span>{minTemp}</span>
    <span>{maxTemp}</span>
    <img src={weather == "Clouds"? cloud : weather == "Rain"? rain : weather == "Clear"? clear : weather == "Haze"? haze : mist}/>
    <p>{weather}</p>
  </div>
  )

  })
        
  
    return (
        <>
 
          {renderSeven}
        

        </>
    )
} */